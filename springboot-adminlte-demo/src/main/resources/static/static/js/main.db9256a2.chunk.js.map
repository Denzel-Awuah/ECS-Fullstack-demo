{"version":3,"sources":["Employees.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Collapse","Panel","Employees","springBackendUrl","useState","employees","setEmployees","setUpdate","useEffect","console","log","getAllEmployees","fetch","then","response","json","data","catch","err","className","onSubmit","event","preventDefault","firstName","target","lastName","email","photoLink","value","fetchData","method","body","JSON","stringify","headers","type","name","id","map","employee","src","width","height","onClick","empId","text","alert","Sidebar","Item","App","class","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db9256a2.chunk.js","sourcesContent":["import { Content, Row, Col, Box, Button } from 'adminlte-2-react';\r\nimport { Modal, Collapse } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport function Employees() {\r\n\r\n    const springBackendUrl = \"http://localhost:8080/api/employees\";\r\n\r\n    const [activeKey, setActiveKey] = useState('0');\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    const [update, setUpdate] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running useEffect\")\r\n        getAllEmployees();\r\n    }, []);\r\n\r\n\r\n    const getAllEmployees = () => {\r\n        fetch(springBackendUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setEmployees(data);\r\n                console.log(\"All employees\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n        setUpdate(\"1\");\r\n        console.log(employees);\r\n    }\r\n\r\n\r\n    function callback(key) {\r\n\r\n        if (activeKey === '0') {\r\n            setActiveKey('1');\r\n        }\r\n        else {\r\n            setActiveKey('0');\r\n        }\r\n\r\n        console.log(activeKey);\r\n    }\r\n\r\n\r\n    //handles new employee submissions\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        const firstName = event.target.firstName;\r\n        const lastName = event.target.lastName;\r\n        const email = event.target.email;\r\n        const photoLink = event.target.photoLink;\r\n\r\n        const data = {\r\n            firstName: firstName.value,\r\n            lastName: lastName.value,\r\n            email: email.value,\r\n            photoLink: photoLink.value,\r\n        }\r\n\r\n\r\n        //Send Data to Spring Boot Backend\r\n\r\n        let fetchData = {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        fetch(springBackendUrl, fetchData)\r\n            .then(response => response.json()\r\n                .then(response => {\r\n\r\n                    console.log(response)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n\r\n\r\n            );\r\n\r\n        getAllEmployees();\r\n        console.log(data)\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleRemove = (empId) => {\r\n\r\n        let fetchData = {\r\n            method: 'DELETE',\r\n        }\r\n\r\n        fetch(springBackendUrl + \"/\" + empId, fetchData)\r\n            .then(response => response.text())\r\n            .then(response => {\r\n\r\n                alert(response)\r\n                console.log(\"removal response\")\r\n                console.log(response)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        getAllEmployees();\r\n        //console.log(data)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Main */}\r\n\r\n<br/>\r\n            <form className=\"theForm\" onSubmit={handleSubmit}>\r\n\r\n                <label>\r\n                    First Name  <br />\r\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" />\r\n                </label>\r\n\r\n\r\n                <label>\r\n                    Last Name  <br />\r\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" />\r\n                </label>\r\n\r\n\r\n                <label>\r\n                    Email  <br />\r\n                    <input type=\"text\" name=\"email\" id=\"email\" />\r\n                </label>\r\n\r\n                <label>\r\n                    Photo Link  <br />\r\n                    <input type=\"text\" name=\"photoLink\" id=\"photoLink\" />\r\n                </label>\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <h1>Employees üíº</h1>\r\n            <br />\r\n            <br />\r\n            <table className=\"container\">\r\n                <thead>\r\n                    <tr>\r\n                        <th><h1 className=\"photo\">üì∏</h1></th>\r\n                        <th><h1>First Name</h1></th>\r\n                        <th><h1>Last Name</h1></th>\r\n                        <th><h1>Email</h1></th>\r\n                        <th><h1>Remove</h1></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {employees.map((employee) =>\r\n                        <tr key={employee.id}>\r\n                            <td><img src={employee.photoLink} width=\"100\" height=\"100\" /></td>\r\n                            <td>{employee.firstName}</td>\r\n                            <td>{employee.lastName}</td>\r\n                            <td>{employee.email}</td>\r\n                            <td className=\"remove\" onClick={() => handleRemove(employee.id)}>‚ùå</td>\r\n                        </tr>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport AdminLTE, { Sidebar } from 'adminlte-2-react';\r\nimport './index.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Routes\r\n} from \"react-router-dom\";\r\nimport { Employees } from './Employees';\r\nimport { test } from './test';\r\n\r\n\r\nconst { Item } = Sidebar;\r\n\r\nexport function Home() {\r\n\r\n\r\n    return(\r\n    <div>\r\n    \r\n    </div>\r\n    )\r\n}","import React from 'react';\nimport AdminLTE, { Sidebar } from 'adminlte-2-react';\nimport './index.css';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Routes\n// } from \"react-router-dom\";\nimport { Employees } from './Employees';\nimport { Home } from './Home';\nimport { test } from './test';\n\n\nconst { Item } = Sidebar;\n\nfunction App() {\n\n\n\n  return (\n\n\n    <div>\n\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a class=\"navbar-brand menu-title\" href=\"#\">Fullstack Demo</a>\n\n      </nav>\n      <Employees />\n\n    </div>\n\n\n  );\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}